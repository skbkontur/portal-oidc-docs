.. _`RFC Authorization Code Flow`: https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth
.. _`RFC Implicit Flow`: https://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth
.. _`страницу входа`: https://auth.kontur.ru/
.. _`RFC Bearer Token Usage`: https://tools.ietf.org/html/rfc6750

Аутентификация в приложении и авторизация в продукты Контура
============================================================

Данный сценарий предполагает, что для аутентификации в вашем приложении пользователь использует учетную запись Контура. Чтобы узнать пользователя и информацию о нем, вашему приложению нужно получить у OpenID Провайдера Id Token. При запросе авторизации пользователь увидит страницу предоставления доступа к данным, которые он соглашается передать вашему приложению. После этого ваше приложение получит у OpenID Провайдера Access Token с соответствующими разрешениями, которые выдал пользователь. С этим токеном ваше приложение сможет отправлять запросы в API других продуктов Контура.

Если вам нужно продлить Access Token (токен доступа) без участия пользователя, то вам нужно запросить вместе с Access Token еще и Refresh Token.

Реализовать получение токенов можно одним из двух способов, выбор которого зависит от типа вашего приложения:

* `Получение токенов через код подтверждения`_ для приложений с бэкендом,
* `Получение токенов из URL`_ для приложений без бэкенда.

.. _rst-murkup-authorize_by_code:

Получение токенов через код подтверждения 
-----------------------------------------

см. в `RFC Authorization Code Flow`_

Схема подходит для приложений с серверной частью. Пользователь для входа в ваше приложение использует учетную запись Контура и выдает разрешение на доступ к данным. После получения разрешений, ваше приложение отправляет запрос в API продукта Контура. 

На схеме ниже показаны основные этапы входа в приложение. Каждый этап описан в алгоритме. 

.. image:: /_static/auth_and_authorize_by_code.jpg

**Алгоритм получения токена через код подтверждения**

Чтобы инициировать аутентификацию в приложении должна быть кнопка/ссылка "Войти".

1. Пользователь входит в приложение.

2. Фронтенд направляет пользователя на OpenID Провайдер. Для этого нужно перенаправить пользователя на Authorization Endpoint:

.. rubric:: Параметры Authorization Endpoint

Все параметры типа string.

.. |br| raw:: html

    <br />

.. table::

    +--------------------+----------------------------------------------------------------------------------+
    | Параметр           | Описание                                                                         |
    +====================+==================================================================================+
    | response_type      | Обязательный параметр. |br|                                                      |
    |                    | Ответ, который нужно получить от OpenID Провайдера. |br|                         |
    |                    | При запросе кода подтверждения указать значение ``code``                         |
    |                    |                                                                                  |
    +--------------------+----------------------------------------------------------------------------------+
    | client_id          | Обязательный параметр. |br|                                                      |
    |                    | Идентификатор приложения, выдается при регистрации приложения                    |
    |                    |                                                                                  |
    +--------------------+----------------------------------------------------------------------------------+
    | scope              | Обязательный параметр. |br|                                                      |
    |                    | Список прав доступа, которые необходимы приложению в текущей сессии. |br|        |
    |                    | Разделяются пробелом.                                                            |
    |                    |                                                                                  |
    |                    | * openid — обязательный scope для аутентификации. |br|                           |
    |                    |                                                                                  |
    |                    | Данный скоуп предполагает получение в ответ от OpenID Провайдера Id Token. |br|  |
    |                    |                                                                                  |
    |                    | * offline_access — scope для продления авторизации (получения Refresh Token).    |
    |                    |                                                                                  |
    |                    | Вместе со скоупом openid вы можете передать:                                     |
    |                    |                                                                                  |
    |                    | * profile;                                                                       |
    |                    | * email;                                                                         |
    |                    | * phone.                                                                         |
    |                    |                                                                                  |
    |                    | Помимо перечисленных cкоупов аутентификации, для авторизации вам нужно передать  |
    |                    | |br| скоупы продуктов Контура, в которые вы хотите отправлять запросы            |
    |                    | от имени пользователя.  |br|                                                     |
    |                    | Описание данных скоупов, а также полный список прав доступов |br|                |
    |                    | см. в :ref:`Терминах и определениях<rst-murkup-scope>`.                          |
    |                    | |br|                                                                             |
    |                    | Максимальная допустимая длина строки — 300                                       |
    +--------------------+----------------------------------------------------------------------------------+
    | redirect_uri       | Обязательный параметр. |br|                                                      |
    |                    | URL, на который нужно перенаправить пользователя после того, как он |br|         |
    |                    | аутентифицировался. |br|                                                         |
    |                    | |br|                                                                             |
    |                    | Адрес URL, который будет передан в данном параметре, нужно обязательно |br|      |
    |                    | указать при :ref:`регистрации приложения<rst-murkup-registration>`               |
    |                    | до выполнения запроса.  |br|                                                     |
    |                    | |br|                                                                             |
    |                    | Максимальная допустимая длина строки — 400                                       |
    +--------------------+----------------------------------------------------------------------------------+
    | nonce              | Обязательный параметр. |br|                                                      |
    |                    | Строка для удостоверения, что сессия клиента связана именно с вернувшимся |br|   |
    |                    | Id Token, и для предотвращения атак повторного воспроизведения.  |br|            |
    |                    | Данная строка вернется обратно клиенту внутри Id Token в п.7. |br|               |
    |                    | |br|                                                                             |
    |                    | Использование nonce позволит вам проверить подлинность информации, |br|          |
    |                    | которую вы получите в Id Token от OpenID Провайдера.                             |
    |                    |                                                                                  |
    |                    | Максимальная допустимая длина строки — 300                                       |
    +--------------------+----------------------------------------------------------------------------------+
    | state              | Необязательный параметр.  |br|                                                   |
    |                    | Строка состояния. Параметр state служит для передачи пользовательского |br|      |
    |                    | контекста. |br|                                                                  |
    |                    | |br|                                                                             |
    |                    | State вернется без изменений обратно клиенту вместе с кодом подтверждения  |br|  |
    |                    | в п.4. Таким образом, вы можете сохранить данные и состояние |br|                |
    |                    | пользователя, созданные до, и  восстановить их после аутентификации. |br|        |
    |                    | |br|                                                                             |
    |                    | Максимальная допустимая длина строки — 1500                                      |
    +--------------------+----------------------------------------------------------------------------------+

**Пример запроса**

::

    http://identity.testkontur.ru/connect/authorize?
    response_type=code
    &scope=openid email phone extern.api
    &client_id=yourClientId
    &redirect_uri=http://www.example.com/
    &state=af0ifjsldkj
    &nonce=n-0S6_WzA2Mj

.. attention:: В примере используется scope extern.api — разрешение на его использование должен выдать владелец ресурса, в данном примере Контур.Экстерн API.

3. OpenID Провайдер перенаправляет пользователя на `страницу входа`_, где он входит в существующую учетную запись или регистрирует новую.

4. После входа в учетную запись, если в запросе Authorization Endpoint были указаны скоупы продуктов Контура, OpenID Провайдер перенаправит пользователя на страницу, где он выдает доступ к данным вашему приложению.

5. OpenID Провайдер перенаправляет пользователя на адрес, указанный в поле ``redirect_uri``. В URL перенаправления будет передан код подтверждения. Также в ответе вернется список скоупов, к которым пользователь разрешил доступ.

   Если код подтверждения выдать не удалось, то OpenID Провайдер передаст в URL код ошибки и ее описание.

.. note:: Есть такие ошибки, которые пользователь увидит в браузере, но они не вернутся приложению в ответе от Authorization Endpoint. Для пользователя на этом закончится сценарий аутентификации. OpenID Провайдер не будет перенаправлять его на redirect_uri. Примеры и описание на странице :doc:`/schemes/user_errors`.

.. rubric:: Данные в возвращаемом URL

.. table::

    +--------------------+----------------------------------------------------------------------------------+
    | Параметр           | Описание                                                                         |
    +====================+==================================================================================+
    | state              | Строка состояния, которую OpenID Провайдер возвращает без изменения              |
    +--------------------+----------------------------------------------------------------------------------+
    | code               | Код подтверждения, который можно обменять на Id Token.                           |
    |                    |                                                                                  |
    |                    | **Время жизни кода — 5 минут**. Если он истек, нужно заново перенаправить        |
    |                    | пользователя на |br| Authorization Endpoint, см. п.2.                            |
    +--------------------+----------------------------------------------------------------------------------+
    | scope              | Список скоупов, на использование которых есть доступ                             |
    +--------------------+----------------------------------------------------------------------------------+
    | error              | Ошибка аутентификации **access_denied**. Возвращается вместо кода подтверждения, |
    |                    | |br| если пользователь или сервер по какой-то причине не выдал                   |
    |                    | разрешение на доступ к данным                                                    |
    +--------------------+----------------------------------------------------------------------------------+
    | error_description  | Описание ошибки                                                                  |
    +--------------------+----------------------------------------------------------------------------------+

**Пример ответа с кодом подтверждения**

::

    HTTP/1.1 302 Found
    Location: https://www.example.com?
    code=SplxlOBeZQQYbYS6WxSbIA
    &state=af0ifjsldkj
    &scope=openid email phone extern.api

**Пример ответа с ошибкой**

::

    HTTP/1.1 302 Found
    Location: https://www.example.com?
    error=access_denied
    &error_description=
    &state=af0ifjsldkj

6. Фронтенд извлекает код подтверждения из URL и передает его на бэкенд. 

7. Бэкенд приложения запрашивает Id Token, Access Token в обмен на код подтверждения. Для этого нужно выполнить запрос в Token Endpoint:

.. rubric:: Параметры запроса Token Endpoint

Все параметры типа string.

.. table::

    +--------------------+----------------------------------------------------------------------------------+
    | Параметр           | Описание                                                                         |
    +====================+==================================================================================+
    | grant_type         | Обязательный параметр. |br|                                                      |
    |                    | Способ запроса токена. Укажите значение ``authorization_code``                   |
    +--------------------+----------------------------------------------------------------------------------+
    | authorization_code | Обязательный параметр. |br|                                                      |
    |                    | Код подтверждения, полученный в запросе аутентификации п.4                       |
    +--------------------+----------------------------------------------------------------------------------+
    | client_id          | Обязательный параметр. |br|                                                      |
    |                    | Идентификатор приложения, выдается при регистрации приложения.                   |
    |                    |                                                                                  |
    |                    | Максимальная допустимая длина строки — 300                                       |
    +--------------------+----------------------------------------------------------------------------------+
    | client_secret      | Обязательный параметр. |br|                                                      |
    |                    | Ключ приложения, выдается при регистрации приложения.                            |
    |                    |                                                                                  |
    |                    | Максимальная допустимая длина строки — 300                                       |
    +--------------------+----------------------------------------------------------------------------------+
    | redirect_uri       | Обязательный параметр. |br|                                                      |
    |                    | URL, на который получили код подтверждения.                                      |
    |                    |                                                                                  |
    |                    | Максимальная допустимая длина строки — 400                                       |
    +--------------------+----------------------------------------------------------------------------------+


**Пример запроса**

::

    POST /token
    Content-type: application/x-www-form-urlencoded

    grant_type=authorization_code
    code=SplxlOBeZQQYbYS6WxSbIA
    client_id=yourClientId
    client_secret=yourClientSecret
    redirect_uri=http://www.example.com

8. OpenID Провайдер возвращает в ответ Id Token и Access Token, если запрос успешно выполнен. Если в запросе Authorization Endpoint был указан скоуп offline_access, то OpenID Провайдер возвращает также Refresh Token. Если OpenID Провайдер не смог выдать токен, то он вернет ответ с ошибкой. Формат ответа — JSON.

   Время жизни Id Token — 5 минут, но OpenID Провайдер не гарантирует, что данные пользователя не изменятся за это время. Для получения информации о пользователе приложение может обратиться к :doc:`UserInfo Endpoint</schemes/discovery>`.

.. rubric::  Параметры ответа Token Endpoint

.. table::

    +--------------------+----------------------------------------------------------------------------------+
    | Параметр           | Описание                                                                         |
    +====================+==================================================================================+
    | id_token           | Токен идентификации — Id Token, запрошенный приложением.                         |
    |                    | Данный параметр можно использовать |br| для проверки личности пользователя       |
    +--------------------+----------------------------------------------------------------------------------+
    | access_token       | Access Token можно использовать для обращения к UserInfo Endpoint                |
    +--------------------+----------------------------------------------------------------------------------+
    | token_type         | Тип токена. Всегда возвращает значение ``Bearer``                                |
    +--------------------+----------------------------------------------------------------------------------+
    | refresh_token      | Токен для :doc:`обновления Access Token</schemes/using_refresh>`                 |
    +--------------------+----------------------------------------------------------------------------------+
    | expires_in         | Время жизни Access Token в секундах                                              |
    +--------------------+----------------------------------------------------------------------------------+

.. rubric:: Возможные ошибки Token Endpoint

.. table::

    +-----+------------------------+----------------------------------------------------------------------------+
    | Код | Название ошибки        | Описание                                                                   |
    +=====+========================+============================================================================+
    | 400 | invalid_client         | * Параметр client_secret или client_id не передан;                         |
    |     |                        | * Параметр client_secret или client_id превышает 300 символов              |
    +-----+------------------------+----------------------------------------------------------------------------+
    | 400 | unsupported_grant_type | * Параметр grant_type не передан;                                          |
    |     |                        | * Переданный grant_type не существует;                                     |
    |     |                        | * Для указанного клиента client_id запрещен переданный grant_type.         |
    |     |                        |                                                                            |
    |     |                        | Если вы хотите реализовать текущую схему аутентификации, напишите нам |br| |
    |     |                        | на portal.team@skbkontur.ru и опишите ваш сценарий                         |
    +-----+------------------------+----------------------------------------------------------------------------+
    | 400 | invalid_grant          | * Параметр authorization_code не передан;                                  |
    |     |                        | * Передан неверный код подтверждения;                                      |
    |     |                        | * Время жизни кода подтверждения истекло;                                  |
    |     |                        | * Переданный authorization_code был выпущен для другого client_id          |
    |     |                        |                                                                            |
    |     |                        | (т.е. аутентификацию начинал другой сервис)                                |
    +-----+------------------------+----------------------------------------------------------------------------+
    | 400 | unauthorized_client    | * Для указанного клиента client_id запрещен переданный authorization_code; |
    |     |                        | * Параметр redirect_uri не передан;                                        |
    |     |                        | * Передан неправильный redirect_uri                                        |
    |     |                        |                                                                            |
    |     |                        | (код подтверждения был отправлен на другой redirect_uri)                   |
    +-----+------------------------+----------------------------------------------------------------------------+

**Пример ответа**

::

    200 OK
    Content-type: application/json

    {
        "access_token": "AAAAAAAAAAAAAAAAA",
        "token_type": "Bearer",
        "expires_in": 3600,
        "id_token": "eyJhbGciOifQ.ewogI3pAKfQ.ggW8hq-rvKMzqg"
    }


9. Бэкенд получает из Id Token информацию о пользователе. Для проверки Id Token воспользуйтесь :doc:`открытым ключом OpenID Provider</schemes/discovery>`. 

10. Бэкенд передает информацию о пользователе из Id Token на фронтенд приложения.

.. note:: Вы должны самостоятельно решить, как будете хранить информацию о сессии пользователя в своём продукте. Например, можно использовать Cookie или LocalStorage браузера.

11. Бэкенд отправляет запрос к серверу ресурсов (API продукта Контура) с использованием Access Token. В запросе должен быть передан http заголовок ``Authorization: Bearer <access_token>``. Подробнее см. в `RFC Bearer Token Usage`_.


Получение токенов из URL
------------------------

см. в `RFC Implicit Flow`_

Схема подходит для приложений с серверной частью. Пользователь для входа в ваше приложение использует учетную запись Контура и выдает разрешение на доступ к данным. После получения разрешений, ваше приложение отправляет запрос в API продукта Контура. 

На схеме ниже показаны основные этапы входа в приложение. Каждый этап описан в алгоритме. 

.. image:: /_static/auth_and_authorize_by_url.jpg

**Алгоритм получения токена из URL**

Чтобы инициировать аутентификацию в приложении должна быть кнопка/ссылка "Войти".

1. Пользователь входит в приложение.

2. Приложение направляет пользователя на OpenID Провайдер. Для этого нужно перенаправить пользователя на Authorization Endpoint.

.. rubric:: Параметры Authorization Endpoint

Все параметры типа string.

.. table::

    +--------------------+----------------------------------------------------------------------------------+
    | Параметр           | Описание                                                                         |
    +====================+==================================================================================+
    | response_type      | Обязательный параметр. |br|                                                      |
    |                    | Ответ, который нужно получить от OpenID Провайдера. |br|                         |
    |                    | При запросе кода подтверждения указать значение ``id_token token`` |br|          |
    +--------------------+----------------------------------------------------------------------------------+
    | client_id          | Обязательный параметр. |br|                                                      |
    |                    | Идентификатор приложения, выдается при регистрации приложения                    |
    +--------------------+----------------------------------------------------------------------------------+
    | scope              | Обязательный параметр. |br|                                                      |
    |                    | Список прав доступа, которые необходимы приложению в текущей сессии. |br|        |
    |                    | Разделяются пробелом.                                                            |
    |                    |                                                                                  |
    |                    | * openid — обязательный scope для аутентификации. |br|                           |
    |                    |                                                                                  |
    |                    | Данный скоуп предполагает получение в ответ от OpenID Провайдера Id Token. |br|  |
    |                    |                                                                                  |
    |                    | * offline_access — scope для продления авторизации (получения Refresh Token).    |
    |                    |                                                                                  |
    |                    | Вместе со скоупом openid вы можете передать:                                     |
    |                    |                                                                                  |
    |                    | * profile;                                                                       |
    |                    | * email;                                                                         |
    |                    | * phone.                                                                         |
    |                    |                                                                                  |
    |                    | Помимо перечисленных cкоупов аутентификации, для авторизации вам нужно передать  |
    |                    | |br| скоупы продуктов Контура, в которые вы хотите отправлять запросы            |
    |                    | от имени пользователя.  |br|                                                     |
    |                    | Описание данных скоупов, а также полный список прав доступов |br|                |
    |                    | см. в :ref:`Терминах и определениях<rst-murkup-scope>`.                          |
    |                    | |br|                                                                             |
    |                    | Максимальная допустимая длина строки — 300                                       |
    +--------------------+----------------------------------------------------------------------------------+
    | redirect_uri       | Обязательный параметр. |br|                                                      |
    |                    | URL, на который нужно перенаправить пользователя после того, как он |br|         |
    |                    | аутентифицировался. |br|                                                         |
    |                    | |br|                                                                             |
    |                    | Адрес URL, который будет передан в данном параметре, нужно обязательно |br|      |
    |                    | указать при :ref:`регистрации приложения<rst-murkup-registration>`               |
    |                    | до выполнения запроса.  |br|                                                     |
    |                    | |br|                                                                             |
    |                    | Максимальная допустимая длина строки — 400                                       |
    +--------------------+----------------------------------------------------------------------------------+
    | nonce              | Обязательный параметр. |br|                                                      |
    |                    | Строка для удостоверения, что сессия клиента связана именно с вернувшимся |br|   |
    |                    | Id Token, и для предотвращения атак повторного воспроизведения.  |br|            |
    |                    | Данная строка вернется обратно клиенту внутри Id Token в п.7. |br|               |
    |                    | |br|                                                                             |
    |                    | Использование nonce позволит вам проверить подлинность информации, |br|          |
    |                    | которую вы получите в Id Token от OpenID Провайдера.                             |
    |                    |                                                                                  |
    |                    | Максимальная допустимая длина строки — 300                                       |
    +--------------------+----------------------------------------------------------------------------------+
    | state              | Необязательный параметр.  |br|                                                   |
    |                    | Строка состояния. Параметр state служит для передачи пользовательского |br|      |
    |                    | контекста. |br|                                                                  |
    |                    | |br|                                                                             |
    |                    | State вернется без изменений обратно клиенту вместе с кодом подтверждения  |br|  |
    |                    | в п.4. Таким образом, вы можете сохранить данные и состояние |br|                |
    |                    | пользователя, созданные до, и  восстановить их после аутентификации. |br|        |
    |                    | |br|                                                                             |
    |                    | Максимальная допустимая длина строки — 1500                                      |
    +--------------------+----------------------------------------------------------------------------------+

**Пример запроса**

::

    http://identity.testkontur.ru/connect/authorize?
    response_type=id_token token
    &scope=openid email phone extern.api
    &client_id=yourClientId
    &redirect_uri=http://www.example.com/
    &state=af0ifjsldkj
    &nonce=n-0S6_WzA2Mj

.. attention:: В примере используется scope extern.api — разрешение на его использование должен выдать владелец ресурса, в данном случае Контур.Экстерн API.

3. OpenID Провайдер перенаправляет пользователя на `страницу входа`_, где он входит в существующую учетную запись или регистрирует новую.

4. После входа в учетную запись, если были указаны скоупы продуктов Конутра, OpenID Провайдер перенаправит пользователя на страница выдачи доступов к данным в указанных продуктах. Пользователь выдает доступ к данным вашему приложению.

5. OpenID Провайдер перенаправляет пользователя на адрес, указанный в поле ``redirect_uri``. В URL перенаправления будут переданы Id Token, Access Token. Если OpenID Провайдер не смог выдать токены, то он вернет ответ с ошибкой. Также в ответе вернется список скоупов, к которым пользователь разрешил доступ.

   Время жизни Id Token — 5 минут, но OpenID Провайдер не гарантирует, что данные пользователя не изменятся за это время. Для получения информации о пользователе приложение может обратиться к :doc:`UserInfo Endpoint</schemes/discovery>`.

.. note:: Есть такие ошибки, которые пользователь увидит в браузере, но они не вернутся приложению в ответе от Authorization Endpoint. Для пользователя на этом закончится сценарий аутентификации. OpenID Провайдер не будет перенаправлять его на redirect_uri. Примеры и описание на странице :doc:`/schemes/user_errors`.

.. rubric:: Данные в URL

.. table::

    +--------------------+----------------------------------------------------------------------------------+
    | Параметр           | Описание                                                                         |
    +====================+==================================================================================+
    | token_type         | Тип токена. Всегда возвращает значение ``Bearer``                                |
    +--------------------+----------------------------------------------------------------------------------+
    | id_token           | Токен идентификации — Id Token, запрошенный приложением.                         |
    |                    | Можно использовать параметр |br| для проверки личности пользователя              |
    +--------------------+----------------------------------------------------------------------------------+
    | access_token       | Access Token можно использовать для обращения к UserInfo Endpoint                |
    +--------------------+----------------------------------------------------------------------------------+
    | expires_in         | Время жизни Access Token в секундах                                              |
    +--------------------+----------------------------------------------------------------------------------+
    | scope              | Список скоупов, на использование которых есть доступ                             |
    +--------------------+----------------------------------------------------------------------------------+
    | state              | Строка состояния, которую OpenID Провайдер возвращает без изменения              |
    +--------------------+----------------------------------------------------------------------------------+
    | error              | Ошибка аутентификации **access_denied**. Возвращается вместо кода |br|           |
    |                    | подтверждения, если пользователь или сервер по какой-то причине не выдал |br|    |
    |                    | разрешение на доступ к данным                                                    |
    +--------------------+----------------------------------------------------------------------------------+
    | error_description  | Описание ошибки                                                                  |
    +--------------------+----------------------------------------------------------------------------------+

**Пример ответа**

::

    HTTP/1.1 302 Found
    Location: https://www.example.com/?
    access_token=SlAV32hkKG
    &token_type=bearer
    &id_token=eyJ0NiJ9.eyJ1I6IjIifX0.DeWt4QuZXso
    &expires_in=3600
    &state=af0ifjsldkj
    &scope=openid email phone extern.api

6.  Приложение получает из Id Token информацию о пользователе. Для проверки Id Token воспользуйтесь :doc:`открытым ключом OpenID Provider</schemes/discovery>`. 

.. note:: Вы должны самостоятельно решить, как будете хранить информацию о сессии пользователя в своём продукте. Например, можно использовать Cookie или LocalStorage браузера.

7. Приложение отправляет запрос к серверу ресурсов (API продукта Контура) с использованием Access Token. В запросе должен быть передан http заголовок ``Authorization: Bearer <access_token>``. Подробнее см. в `RFC Bearer Token Usage`_.