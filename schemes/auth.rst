.. _`RFC Authorization Code Flow`: https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth
.. _`RFC Implicit Flow`: https://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth
.. _`страницу входа`: https://auth.kontur.ru/

Аутентификация в приложении
---------------------------

Данный сценарий предполагает, что для аутентификации в вашем приложении пользователь использует учетную запись Контура. Чтобы узнать пользователя и информацию о нем, вашему приложению нужно получить у OpenID Провайдера Id Token. В этой статье описаны схемы интеграции, следуя алгоритму которых, ваше приложение получит Id Token пользователя и аутентифицирует его.

Реализовать получение токена можно одним из двух способов, выбор которого зависит от типа вашего приложения:

* `Получение токена через код подтверждения`_ для приложений с бэкендом,
* `Получение токена из url`_ для приложений без бэкенда.

Получение токена через код подтверждения 
----------------------------------------

см. в `RFC Authorization Code Flow`_

Схема подходит для приложений с серверной частью. Пользователь для входа в ваше приложение использует учетную запись Контура. 

На схеме ниже показаны основные этапы входа в приложение. Каждый этап описан ниже в алгоритме:

.. image:: /_static/autentification_by_code.png

Чтобы инициировать аутентификацию в приложении должна быть кнопка/ссылка "Войти".

1. Пользователь входит в приложение.

2. Приложение направляет пользователя на OpenID Провайдер. Для этого нужно перенаправить пользователя на Authorization Endpoint:

+--------------------+---------------------------------------------------------------+
| Параметр           | Описание                                                      |
+====================+===============================================================+
| response_type      | Обязательный параметр                                         | 
|                    | Ответ, который нужно получить от OpenID Провайдера.           |
|                    | При запросе кода подтверждения указать значение ``code``      |
+--------------------+---------------------------------------------------------------+
| client_id          | Обязательный параметр                                         |
|                    | Идентификатор приложения, выдается при регистрации приложения |
+--------------------+---------------------------------------------------------------+
| scope              | Обязательный параметр                                         |
|                    | Список прав доступа, которые необходимы приложению в          |
|                    | текущей сессии. Разделяются пробелом.                         |
|                    | * openid — обязательный scope для аутентификации,             |
|                    | данный scope предполагает получение в ответ от                |
|                    | OpenID Провайдера Id Token;                                   |
|                    |                                                               |
|                    | Вместе со скоупом openid вы можете передать:                  |
|                    |                                                               |
|                    | * profile;                                                    |
|                    | * email;                                                      |
|                    | * phone.                                                      |
|                    |                                                               |
|                    | Описание данных скоупов, а также полный список прав доступов  |
|                    | см. в Терминах и определениях                                 |
|                    |                                                               |
|                    | Максимальная допустимая длина строки — 300                    |
+--------------------+---------------------------------------------------------------+
| redirect_uri       | Обязательный параметр                                         |
|                    | URL, на который нужно перенаправить пользователя после того,  |
|                    | как он аутентифицировался.                                    |
|                    |                                                               |
|                    | Адрес URL, который будет передан в данном параметре, нужно    |
|                    | обязательно указать при регистрации приложения до выполнения  |
|                    | запроса.                                                      |
|                    |                                                               |
|                    | Максимальная допустимая длина строки — 400                    |
+--------------------+---------------------------------------------------------------+
| nonce              | Обязательный параметр                                         |
|                    | Строка для удостоверения, что сессия клиента связана именно с |
|                    | вернувшимся Id Token и для предотвращения атак повторного     |
|                    | воспроизведения. Данная строка вернется обратно клиенту       |
|                    | внутри Id Token в п.7.                                        |
|                    |                                                               |
|                    | Использование nonce позволит вам проверить подлинность        |
|                    | информации, которую вы получите в Id Token от                 |
|                    | OpenID Провайдера                                             |
|                    | Максимальная допустимая длина строки — 300                    |
+--------------------+---------------------------------------------------------------+
| state              | Не обязательный параметр                                      |
|                    | Строка состояния. Параметр state служит для передачи          |
|                    | пользовательского контекста. Он вернется обратно клиенту      |
|                    | вместе с кодом подтверждения в п.4. Таким образом, вы можете  |
|                    | сохранить данные и состояние пользователя, созданные до, и    |
|                    | восстановить их после аутентификации                          |
+--------------------+---------------------------------------------------------------+

Параметры Authorization Endpoint
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Все параметры типа string

:: 

    https://identity.testkontur.ru/authorize?
    response_type=id_token token
    &client_id=s6BhdRkqt3
    &redirect_uri=https://client.example.com
    &scope=openid profile email
    &nonce=n-0S6_WzA2Mj
    &state=af0ifjsldkj

3. OpenID Провайдер перенаправляет пользователя на `страницу входа`_, где он входит в существующую учетную запись или регистрирует новую.

4. OpenID Провайдер перенаправляет пользователя на адрес, указанный в поле ``redirect_uri``. В URL перенаправления будет передан код подтверждения. Если код подтверждения выдать не удалось, то OpenID Провайдер передаст в URL код ошибки и ее описание. 

.. note:: Есть такие ошибки, которые пользователь увидит в браузере, но они не вернутся приложению в ответе от Authorization Endpoint. Для пользователя на этом закончится сценарий аутентификации. OpenID Провайдер не будет перенаправлять его на ``redirect_uri``. Примеры и описание на странице :doc:`/schemes/user_errors`.

Данные в возвращаемом URL
~~~~~~~~~~~~~~~~~~~~~~~~~

**Пример ответа с кодом подтверждения**

::

    HTTP/1.1 302 Found
    Location: https://client.example.com?
    code=SplxlOBeZQQYbYS6WxSbIA
    &state=af0ifjsldkj

**Пример ответа с ошибкой**

::

    HTTP/1.1 302 Found
    Location: https://client.example.com?
    error=access_denied
    &error_description=
    &state=af0ifjsldkj

5. Фронтенд извлекает код подтверждения из URL и передает его на бэкенд. 

6. Бэкенд приложения запрашивает Id Token в обмен на код подтверждения. Для этого нужно выполнить запрос в Token Endpoint:

Параметры запроса Token Endpoint
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Все параметры типа string.


**Пример запроса**

::

    POST /token
    Content-type: application/x-www-form-urlencoded
    
    grant_type=authorization_code
    code=SplxlOBeZQQYbYS6WxSbIA
    client_id=yourClientId
    client_secret=yourClientSecret
    redirect_uri=http://www.example.com

7. OpenID Провайдер возвращает в ответ Id Token и Access Token, если запрос успешно выполнен. Если OpenID Провайдер не смог выдать токен, то он вернет ответ с ошибкой. Формат ответа — JSON.

Время жизни Id Token — 5 минут, но OpenID Провайдер не гарантирует, что данные пользователя не изменятся за это время. Для получения информации о пользователе приложение может обратиться к :doc:`UserInfo Endpoint</schemes/discovery>`.

Параметры ответа Token Endpoint
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Возможные ошибки Token Endpoint
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



**Пример ответа**

::

    200 OK
    Content-type: application/json
    
    {
    "access_token": "AAAAAAAAAAAAAAAAA",
    "token_type": "Bearer",
    "expires_in": 3600,
    "id_token": "eyJhbGciOifQ.ewogI3pAKfQ.ggW8hq-rvKMzqg"
    }

8. Бэкенд получает из Id Token информацию о пользователе. Для проверки Id Token воспользуйтесь открытым ключом OpenID Provider. 

9. Бэкенд передает информацию о пользователе из Id Token на фронтенд приложения.


.. note:: Вы должны самостоятельно решить, как будете хранить информацию о сессии пользователя в своём продукте. Например, можно использовать Cookie или LocalStorage браузера.


Получение токена из url
-----------------------

см. в `RFC Implicit Flow`_


.. image:: /_static/autentification_by_url.png